@using CoMute.Web.Models
@model User
@using (Html.BeginForm("Register", "Home", new { }, FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "fregister", @autocomplete = "off" }))
{ 
    <form id="register">
        <h2>Register</h2>
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-4 col-md-2" })
            <div class="col-sm-8 col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { id = "name", @class = "form-control", placeholder = "First name", autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-sm-4 col-md-2" })
            <div class="col-sm-8 col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { id = "surname", @class = "form-control", placeholder = "Surname" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-sm-4 col-md-2" })
            <div class="col-sm-8 col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { id = "phone", @class = "form-control", placeholder = "Phone number" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-sm-4 col-md-2" })
            <div class="col-sm-8 col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { type = "text", id = "email", @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-4 col-md-2" })
            <div class="col-sm-8 col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { type = "password", id = "password", @class = "form-control", placeholder = "Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-sm-4 col-md-2" })
            <div class="col-sm-8 col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { type = "password", id = "confirmPassword", @class = "form-control", placeholder = "Confirm password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-offset-2 col-md-10">
            <button class="btn btn-primary" type="submit" id="sign-in">Register</button>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </form>
}